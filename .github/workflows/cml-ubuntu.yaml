name: gcbm-Carpathians-ubuntu-CML
on: push

jobs:
  run-on-ubuntu:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies           
        run: |           
          sudo add-apt-repository ppa:ubuntugis/ppa && sudo apt-get update            
          sudo apt-get install gdal-bin           
          sudo apt-get install libgdal-dev            
          export CPLUS_INCLUDE_PATH=/usr/include/gdal            
          export C_INCLUDE_PATH=/usr/include/gdal           
          pip install wheel            
          pip install numpy           
          sudo pip3 install GDAL==$(gdal-config --version | awk -F'[.]' '{print $1"."$2}') --global-option=build_ext --global-option="-I/usr/include/gdal"

          pip install -r installation/requirements.txt    

      - name: Run GCBM
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd Standalone_GCBM/gcbm_project
          sudo chmod +x ../tools/GCBM/moja.cli.exe && ../tools/GCBM/moja.cli.exe --config_file gcbm_config.cfg --config_provider provider_config.json

      - name: Compile results
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: cmd
        run: |
          cd Standalone_GCBM/tools/CompileGCBMResults
          python compileresults.py sqlite:///../../gcbm_project/output/gcbm_output.db --output_db sqlite:///../../processed_output/compiled_gcbm_output.db

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.1.3'
      - uses: r-lib/actions/setup-renv@v2
      - uses: iterative/setup-cml@v1
      - uses: iterative/setup-dvc@v1

      - name: Installations and renv restore
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          cd Postprocessing
          Rscript -e "renv::activate()"
          Rscript -e "renv::restore(lockfile = 'renv.lock')"

      - name: dvc repro - postprocessing
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dvc repro -s postprocessing
        
      - name: Display plots for DOM stocks
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dvc metrics diff --show-md > report.md
          echo "## Figures created" >> report.md
          echo "![](Postprocessing/Figures/Carpathians_Sensitivity_BorealWet.png)" >> report.md 
          echo "![](Postprocessing/Figures/Carpathians_Sensitivity_CoolTemperateMoist.png)" >> report.md
          echo "![](Postprocessing/Figures/Carpathians_Sensitivity_CoolTemperateSteppe.png)" >> report.md
          echo "![](Postprocessing/Figures/Carpathians_Sensitivity_CoolTemperateWet.png)" >> report.md
          echo "![](Postprocessing/Figures/Carpathians_Sensitivity_PolarRainTundra.png)" >> report.md
          cml comment create --pr=false report.md
          
          