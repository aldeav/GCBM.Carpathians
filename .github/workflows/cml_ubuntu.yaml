name: gcbm-Carpathians-ubuntu-CML
on: push
jobs:
  run:
    runs-on: [ubuntu-latest]
    steps:
      - uses: iterative/setup-cml@v1
      - uses: iterative/setup-dvc@v1
      - uses: actions/checkout@v3

      - name: Required Installations
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml ci
          pip install -r installation/requirements.txt

          sudo add-apt-repository ppa:ubuntugis/ppa && sudo apt-get update            
          sudo apt-get install gdal-bin           
          sudo apt-get install libgdal-dev            
          export CPLUS_INCLUDE_PATH=/usr/include/gdal            
          export C_INCLUDE_PATH=/usr/include/gdal           
          pip install wheel                     
          sudo pip3 install GDAL==$(gdal-config --version | awk -F'[.]' '{print $1"."$2}') --global-option=build_ext --global-option="-I/usr/include/gdal"

          pip freeze > result.txt
          cat result.txt

      - name: dvc repro - run_gcbm
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dvc repro -s run_gcbm 
          echo "1. Ran run_gcbm stage" > report.md

          cat Standalone_GCBM/logs/Moja_Debug.log

      - name: dvc repro - compile_results
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dvc repro -s compile_results 
          echo "2. Ran compile_results stage" >> report.md

          cat Standalone_GCBM/logs/compile_results.log

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.1.3'
      - uses: r-lib/actions/setup-renv@v2
      
      - name: Renv and run postprocessing code
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          cd Postprocessing
          Rscript -e "getwd()"

          Rscript -e "renv::activate()"
          Rscript -e "renv::restore(lockfile = 'renv.lock')"

          Rscript Summarize_DOM_Stocks.R
        
      - name: Display plots for DOM stocks
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Figures created" >> report.md
          echo "![](/Postprocessing/Figures/Carpathians_Sensitivity_BorealWet.png)" >> report.md 
          echo "![](/Postprocessing/Figures/Carpathians_Sensitivity_CoolTemperateMoist.png)" >> report.md
          echo "![](/Postprocessing/Figures/Carpathians_Sensitivity_CoolTemperateSteppe.png)" >> report.md
          echo "![](/Postprocessing/Figures/Carpathians_Sensitivity_CoolTemperateWet.png)" >> report.md
          echo "![](/Postprocessing/Figures/Carpathians_Sensitivity_PolarRainTundra.png)" >> report.md
          cml comment create --pr=false report.md
          